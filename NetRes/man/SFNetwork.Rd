% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/SFNetwork.R
\name{SFNetwork}
\alias{SFNetwork}
\title{SFNetwork SFNetwork class definition}
\description{
SFNetwork SFNetwork class definition

SFNetwork SFNetwork class definition
}
\section{Public fields}{
\if{html}{\out{<div class="r6-fields">}}
\describe{
\item{\code{dag}}{The generated directed acyclic graph}

\item{\code{vRank}}{vertex topological rank}

\item{\code{outDegree}}{out-degree of vertices based on direct descendants}
}
\if{html}{\out{</div>}}
}
\section{Methods}{
\subsection{Public methods}{
\itemize{
\item \href{#method-SFNetwork-new}{\code{SFNetwork$new()}}
\item \href{#method-SFNetwork-print}{\code{SFNetwork$print()}}
\item \href{#method-SFNetwork-plot}{\code{SFNetwork$plot()}}
\item \href{#method-SFNetwork-generateData}{\code{SFNetwork$generateData()}}
\item \href{#method-SFNetwork-plotVennDiagramOfChildren}{\code{SFNetwork$plotVennDiagramOfChildren()}}
\item \href{#method-SFNetwork-clone}{\code{SFNetwork$clone()}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SFNetwork-new"></a>}}
\if{latex}{\out{\hypertarget{method-SFNetwork-new}{}}}
\subsection{Method \code{new()}}{
Generate a DAG using Barabasi's game and generate matching data
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SFNetwork$new(
  numVertices = 20,
  topology = "power",
  numChildren = 2,
  addOneEdge = TRUE,
  par1 = 1,
  nHubs = 2,
  hubInfluence = numVertices/nHubs
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{numVertices}}{number of vertices in the DAG (default=20)}

\item{\code{topology}}{power/star}

\item{\code{numChildren}}{number of children of each vertex, on average (i.e., node denisty, default=2)}

\item{\code{addOneEdge}}{whether to add a single edge not involving a latent variable to star or twin-star topologies (helps with AUC calculation; default=TRUE)}

\item{\code{par1}}{Par1, as in documentation for pcalg::randDAG.  For Power Law nets, has the meaning of power of preferential attachment.  Defaults to 1}

\item{\code{nHubs}}{how many hubs to create in addition to the regular vertices}

\item{\code{hubInfluence}}{how many nodes a hub should influence; default is round(numVertices/nHubs)}
}
\if{html}{\out{</div>}}
}
\subsection{Returns}{
A `SFNetwork` object
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SFNetwork-print"></a>}}
\if{latex}{\out{\hypertarget{method-SFNetwork-print}{}}}
\subsection{Method \code{print()}}{
prints the details of the DAG
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SFNetwork$print()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SFNetwork-plot"></a>}}
\if{latex}{\out{\hypertarget{method-SFNetwork-plot}{}}}
\subsection{Method \code{plot()}}{
plots the DAG
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SFNetwork$plot()}\if{html}{\out{</div>}}
}

}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SFNetwork-generateData"></a>}}
\if{latex}{\out{\hypertarget{method-SFNetwork-generateData}{}}}
\subsection{Method \code{generateData()}}{
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SFNetwork$generateData(
  numSamples = 1000,
  doPlot = FALSE,
  errDist = "normal",
  latIdx = c(2, 3),
  rescaleNoiseBy = function(mu = 0.5, sigma = 0.2, alpha = -5) {
    
    return(rskew_normal(1, mu, sigma, alpha))
 },
  blomTransform = TRUE
)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{numSamples}}{number of samples in the generated data frame (default = 1000)}

\item{\code{doPlot}}{whether or not to generate a network plot (default = FALSE)}

\item{\code{errDist}}{error distribution of data generated for the network, as in rmvDAG}

\item{\code{latIdx}}{indices of hubs (in decreasing order) to make latent; by default 2nd and 3rd largest.  These will be prefixed with "U_" (unobserved).  If none, set to NULL}

\item{\code{rescaleNoiseBy}}{If a positive number, scales sd from default parameter for all variables by a constant; 
default behavior is scale everything through a left-skewed gaussian to generate several proxy variables for latent space; 
if NULL, no rescaling}

\item{\code{blomTransform}}{If TRUE (default), then blom-transform the data}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SFNetwork-plotVennDiagramOfChildren"></a>}}
\if{latex}{\out{\hypertarget{method-SFNetwork-plotVennDiagramOfChildren}{}}}
\subsection{Method \code{plotVennDiagramOfChildren()}}{
Function to plot a multi-venn of counts of children for top hubs
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SFNetwork$plotVennDiagramOfChildren(hubs)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{hubs}}{The list of hubs the children of which should be inspected for overlap}
}
\if{html}{\out{</div>}}
}
}
\if{html}{\out{<hr>}}
\if{html}{\out{<a id="method-SFNetwork-clone"></a>}}
\if{latex}{\out{\hypertarget{method-SFNetwork-clone}{}}}
\subsection{Method \code{clone()}}{
The objects of this class are cloneable with this method.
\subsection{Usage}{
\if{html}{\out{<div class="r">}}\preformatted{SFNetwork$clone(deep = FALSE)}\if{html}{\out{</div>}}
}

\subsection{Arguments}{
\if{html}{\out{<div class="arguments">}}
\describe{
\item{\code{deep}}{Whether to make a deep clone.}
}
\if{html}{\out{</div>}}
}
}
}
